@using TodoList.Models;
@using TodoList.Models.Enums;
@using TodoListBlazorWasm.Services;
@inject ITaskApiClient TaskApiClient;
@inject IUserApiClient UserApiClient;

@if (Assignees != null)
{
    <EditForm Model="@TaskListSearch" OnSubmit=@SearchForm>
        <div class="row">
            <div class="col">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="TaskListSearch.Name"></InputText>
            </div>

            <div class="col">
                <label>Assignee</label>
                <InputSelect class="form-control" @bind-Value="TaskListSearch.AssigneeId">
                    <option>Select an assignee</option>
                    @foreach (var assignee in Assignees)
                    {
                        <option value="@assignee.Id">@assignee.FullName</option>
                    }
                </InputSelect>
            </div>

            <div class="col">
                <label>Priority</label>
                <InputSelect class="form-control" @bind-Value="TaskListSearch.Priority">
                    <option>Select a priority</option>
                    @foreach (string item in Enum.GetNames(typeof(Priority)))
                    {
                        <option value="@item">@item</option>
                    }
                </InputSelect>
            </div>

            <div class="col pt-4">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
            <div class="col pt-4">
                <a href="/taskCreate" class="btn btn-success">Create</a>
            </div>
        </div>
    </EditForm>
}

@code {
    private List<AssigneeDto> Assignees;

    private TaskListSearch TaskListSearch = new TaskListSearch();

    [Parameter]
    public EventCallback<TaskListSearch> OnSearch { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Assignees = await UserApiClient.GetAssignees();
    }

    private async Task SearchForm(EditContext context)
    {
        OnSearch.InvokeAsync(TaskListSearch);
    }

}